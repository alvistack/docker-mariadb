---

# (c) Wong Hoi Sing Edison <hswong3i@pantarei-design.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: purge /var/lib/mysql
  shell: |
    set -o pipefail
    find /var/lib/mysql -mindepth 1 -delete
  args:
    executable: "/bin/bash"
  register: result
  changed_when: result is not succeeded
  ignore_errors: true
  tags: localhost

- name: prepare directories
  file:
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0755') }}"
    state: "{{ item.state | default('directory') }}"
  loop:
    - { dest: "/docker-entrypoint-initdb.d" }
    - { dest: "/etc/mysql" }
    - { dest: "/usr/local/bin" }
    - { dest: "/var/lib/mysql", owner: "mysql", group: "mysql" }
    - { dest: "/var/run/mysqld", owner: "mysql", group: "mysql", mode: "0777" }
    - { dest: "{{ kubernetes_peer_finder_download.dest | dirname }}" }
  tags: localhost

- name: download archive
  get_url:
    url: "{{ item.url }}"
    dest: "{{ item.dest }}"
    checksum: "{{ item.checksum }}"
  loop:
    - "{{ kubernetes_peer_finder_download }}"
  register: get_url_result
  until: get_url_result is succeeded
  tags: localhost

- name: unarchive package
  shell: |
    set -o pipefail
    cd /usr/local/bin
    TMP_DIR="`mktemp -d`" \
      && cp {{ kubernetes_peer_finder_download.dest }} $TMP_DIR/peer-finder \
      && mv $TMP_DIR/peer-finder . \
      && rm -rf $TMP_DIR
  args:
    executable: "/bin/bash"
  when: get_url_result is changed
  tags: localhost

- name: copy templates
  template:
    dest: "{{ item.dest }}"
    src: "{{ item.src | default('./templates' + item.dest + '.j2') }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0644') }}"
    backup: true
  loop:
    - { dest: "/etc/mysql/my.cnf" }
    - { dest: "/usr/local/bin/on-start.sh", mode: "0755" }
  tags: localhost

- name: prepare files
  file:
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0644') }}"
    state: "{{ item.state | default('file') }}"
  loop:
    - { dest: "/etc/mysql/my.cnf" }
    - { dest: "/usr/local/bin/on-start.sh", mode: "0755" }
    - { dest: "/usr/local/bin/peer-finder", mode: "0755" }
  tags: localhost
